{"ast":null,"code":"import { UserTask } from './usertask';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../task.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction TasksComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const task_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r3.description);\n  }\n}\n\nfunction TasksComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const task_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r4.description);\n  }\n}\n\nexport let TasksComponent = /*#__PURE__*/(() => {\n  class TasksComponent {\n    constructor(service) {\n      this.service = service;\n      this.Checklist = []; // = [{description : 'test', completed : true}];\n\n      this.newTask = new UserTask();\n    }\n\n    ngOnInit() {\n      this.getChecklist();\n    }\n\n    getChecklist() {\n      this.service.getTasks().subscribe(data => {\n        this.Checklist = data;\n        this.groupTasks();\n      });\n    }\n\n    groupTasks() {\n      this.completedTasks = [];\n      this.pendingTasks = [];\n      this.Checklist.forEach(task => {\n        task.completed ? this.completedTasks.push(task) : this.pendingTasks.push(task);\n      });\n    }\n\n    AddTask(newTask) {\n      this.newTask = {\n        description: newTask,\n        completed: false\n      };\n      this.service.addTask(this.newTask).subscribe(response => {\n        this.getChecklist();\n      });\n    }\n\n  }\n\n  TasksComponent.ɵfac = function TasksComponent_Factory(t) {\n    return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n  };\n\n  TasksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TasksComponent,\n    selectors: [[\"app-tasks\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[1, \"input-div\"], [\"newTask\", \"\"], [3, \"click\"], [1, \"completed-table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"pending-table\"]],\n    template: function TasksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"To Do List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0);\n        i0.ɵɵtext(3, \" Enter new task: \");\n        i0.ɵɵelement(4, \"input\", null, 1);\n        i0.ɵɵelementStart(6, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function TasksComponent_Template_button_click_6_listener() {\n          i0.ɵɵrestoreView(_r5);\n\n          const _r0 = i0.ɵɵreference(5);\n\n          return ctx.AddTask(_r0.value);\n        });\n        i0.ɵɵtext(7, \"Add Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\");\n        i0.ɵɵelementStart(9, \"table\", 3);\n        i0.ɵɵelementStart(10, \"tr\");\n        i0.ɵɵelementStart(11, \"th\");\n        i0.ɵɵtext(12, \"Completed\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, TasksComponent_tr_13_Template, 3, 1, \"tr\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"table\", 5);\n        i0.ɵɵelementStart(15, \"tr\");\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"Pending\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, TasksComponent_tr_18_Template, 3, 1, \"tr\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.completedTasks);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.pendingTasks);\n      }\n    },\n    directives: [i2.NgForOf],\n    styles: [\".completed-table[_ngcontent-%COMP%]{float:left;background-color:green}.pending-table[_ngcontent-%COMP%]{background-color:orange}table[_ngcontent-%COMP%]{padding:1em;width:50%}h1[_ngcontent-%COMP%]{text-align:center}.input-div[_ngcontent-%COMP%]{text-align:center;padding:1em}input[_ngcontent-%COMP%]{width:50%}\"]\n  });\n  return TasksComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}